---
# add devices with connectivity to the "running_hosts" group
- hosts: all
  connection: local
  gather_facts: no
  strategy: free
  tasks:
    - block:
        - name: determine hosts that are up
          wait_for_connection:
            timeout: 5
          vars:
            ansible_connection: ssh
        - name: running_hosts
          group_by:
            key: "running_hosts"
      rescue:
        - debug: msg="cannot connect to {{inventory_hostname}}"

# upgrade dnf
- hosts: dnf:&running_hosts
  gather_facts: no
  strategy: free
  tasks:
  - name: upgrade all packages
    yum: name=* state=latest use_backend="yum4"    
    become: yes
  - name: clear dnf cache
    ansible.builtin.shell: dnf clean all
    become: yes
  - name: Print return information from the previous task
    ansible.builtin.debug:
      var: result
      verbosity: 2
  - name: Get uptime information
    ansible.builtin.shell: /usr/bin/uptime
    register: result
  - name: Display all variables/facts known for a host
    ansible.builtin.debug:
      var: hostvars[inventory_hostname]
      verbosity: 4
#  - name: Prints two lines of messages, but only if there is an environment value set
#    ansible.builtin.debug:
#      msg:
#      - "Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}"
#      - "These servers were built using the password of '{{ password_used }}'. Please retain this for later use."    
  - name: send info about upgrades to zabbix
    ansible.builtin.shell: /etc/zabbix/scripts/yum_updates.sh
    become: yes
    
# upgrade apt
- hosts: apt:&running_hosts
  gather_facts: no
  strategy: free
  tasks:
  - name: upgrade all packages
    apt: name=* state=latest update_cache=yes
    become: yes
  #inform zabbix about upgrades
  #- name: send info to zabbix
  #  ansible.builtin.shell: /etc/zabbix/scripts/yum_updates.sh
  #  become: yes

# upgrade arch
- hosts: arch:&running_hosts
  gather_facts: no
  tasks:
  - name: Run the equivalent of pacman Syu as a separate step
    community.general.pacman:
      update_cache: yes
      #upgrade: yes
    become: yes

# send info about result
- hosts: localhost
  tasks:
#  - name: "Ansible Message"
#    debug:
#      msg: "{{ host.stdout }}"
  - name: "send mail"
    community.general.mail:
      host: mail.pavkamlc.cz
      port: 25
      to: 'pavel.mlcoch@pavkamlc.cz'
      sender: 'mgmt1@pavkamlc.cz'
      subject: 'Ansible-report {{ ansible_hostname }}'
      body: |
        System {{ ansible_hostname }} has been successfully provisioned 
        inventory {{ ansible_inventory_sources }}
        as user {{ ansible_user }}
        on host {{ ansible_play_hosts_all }}
        url: http://mgmt1.pavkamlc.cz:3000/project/1/templates
    delegate_to: localhost
